# -*- coding: utf-8 -*-
"""BazaFilmow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zQJOoOtMiq8R7DzgsSSUN--PEj55klGw

10 najwyżej ocenianych filmów
"""

import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload()


df = pd.read_csv('tmdb_movies (4).csv')

if 'vote_count' in df.columns and 'vote_average' in df.columns:

    df_cleaned = df.dropna(subset=['vote_count', 'vote_average']) #usuniecie pustych danych
    Q3 = np.percentile(df_cleaned['vote_count'], 75) #obliczenie Q3
    filtered_df = df_cleaned[df_cleaned['vote_count'] > Q3] #filmy z większąliczbą głosów od Q3
    top_10_movies = filtered_df.sort_values(by='vote_average', ascending=False).head(10)

print("10 najwyżej ocenianych filmów, których liczba głosów jest większa od 3. kwartyla:")
print(top_10_movies[['title', 'vote_average', 'vote_count']])

"""Wykres średni przychód i budżet filmu w latach 2010-2016

"""

df['release_date'] = pd.to_datetime(df['release_date'], errors='coerce')
df_filtered = df[(df['release_date'].dt.year >= 2010) & (df['release_date'].dt.year <= 2016)]
df_filtered = df_filtered.dropna(subset=['revenue', 'budget'])
grouped_df = df_filtered.groupby(df_filtered['release_date'].dt.year)[['revenue', 'budget']].mean()
print(grouped_df)

import matplotlib.pyplot as plt
import numpy as np

fig, ax = plt.subplots()
ax.bar(grouped_df.index, grouped_df['revenue'], color='b', width=0.4, label='Średni przychód')


ax.plot(grouped_df.index, grouped_df['budget'], color='r', label='Średni budżet', marker='o')

ax.set_xlabel('Rok', fontsize=12)
ax.set_ylabel('Średni przychód (w milionach)', fontsize=12)

plt.title('Średni przychód i średni budżet filmów w latach 2010-2016', fontsize=14)
fig.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05), fontsize=10)

plt.tight_layout()
plt.show()

"""Łączenie bazy filmów i bazy gatunków"""

from google.colab import files
uploaded = files.upload()


df = pd.read_csv('tmdb_movies (4).csv')
genres_df = pd.read_csv('tmdb_genres (1).csv', header=None)
genres_df.columns = ['genre_id', 'genre_name']

merged_df = pd.merge(df, genres_df, on='genre_id', how='left')
print(merged_df.head())

"""Gatunek filmu pojawiający się najczęciej oraz ile filmów tego gatunku jest w bazie"""

most_common_genre = merged_df['genre_name'].value_counts().idxmax()  # gatunek pojawiający się najczęściej
most_common_genre_count = merged_df['genre_name'].value_counts().max()  # liczba filmów tego gatunku

most_common_genre, most_common_genre_count

"""Najdłuższe filmy"""

average_runtime_per_genre = merged_df.groupby('genre_name')['runtime'].mean()
most_duration_genre = average_runtime_per_genre.idxmax()
most_duration_runtime = average_runtime_per_genre.max()

most_duration_genre, most_duration_runtime

"""Histogram"""

most_duration_genre_movies = merged_df[merged_df['genre_name'] == most_duration_genre]

#histogram czasu trwania filmów z tego gatunku
plt.figure(figsize=(10, 6))
plt.hist(most_duration_genre_movies['runtime'], bins=20, color='skyblue', edgecolor='black')
plt.title(f'Histogram czasu trwania filmów z gatunku: {most_duration_genre}', fontsize=14)
plt.xlabel('Czas trwania (minuty)', fontsize=12)
plt.ylabel('Liczba filmów', fontsize=12)
plt.show()